# This yaml only pushes the code to the existing lambda. You must create
#  the lambda function(s) in the AWS Console first, before triggering the pipeline. 
# Source:  https://www.whitespectre.com/ideas/multiple-aws-lambda-deployment-with-github-actions/ 
on:
  push:
    branches:
      - main
jobs:
  deploy1:
    name: Deploy lambda code on main branch push
    # Your repo MUST be in a UConn GitHub Organization that has been configured with RH Runners. 
    # This is a manual task that needs to be completed by the UConn School of Business IT staff.
    # The runs-on value must be "self-hosted" to leverage the runner .
    runs-on: self-hosted

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2
          
      # Setp AWS CLI
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      # The second parameter should be the file path of your local lambda code you want to deploy
      - run: zip -j lambda1.zip ./lambda1/lambda1.py

      # Change the function-name value to match your function name in AWS
      - run: aws lambda update-function-code --function-name=test-lambda1 --zip-file=fileb://lambda1.zip

  deploy2:
    name: Deploy lambda code on main branch push
    # Your repo MUST be in a UConn GitHub Organization that has been configured with RH Runners. 
    # This is a manual task that needs to be completed by the UConn School of Business IT staff.
    # The runs-on value must be "self-hosted" to leverage the runner .
    runs-on: self-hosted

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2
          
      # Setp AWS CLI
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      # The second parameter should be the file path of your local lambda code you want to deploy
      - run: zip -j lambda2.zip ./lambda2/lambda2.py

      # Change the function-name value to match your function name in AWS
      - run: aws lambda update-function-code --function-name=test-lambda2 --zip-file=fileb://lambda2.zip
